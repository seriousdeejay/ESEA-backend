# Generated by Django 3.1.6 on 2021-04-01 17:12

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=75)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name_prefix', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('uniquetoken', models.CharField(blank=True, max_length=8)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DirectIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=45)),
                ('min_number', models.IntegerField(null=True)),
                ('max_number', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': 'direct_indicator',
                'verbose_name_plural': 'direct_indicators',
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ispublic', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ispublic', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'organisation',
                'verbose_name_plural': 'organisations',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isMandatory', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('instruction', models.TextField(blank=True, null=True)),
                ('answertype', models.CharField(choices=[('TEXT', 'text'), ('NUMBER', 'number'), ('RADIO', 'radio'), ('CHECKBOX', 'checkbox')], default='TEXT', max_length=100)),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direct_indicator_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'question_response',
                'verbose_name_plural': 'question_responses',
            },
        ),
        migrations.CreateModel(
            name='Respondent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=75)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name_prefix', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('organisation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveyrespondents', to='core.organisation')),
            ],
        ),
        migrations.CreateModel(
            name='StakeholderGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'stakeholder_group',
                'verbose_name_plural': 'stakeholder_groups',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='core.method')),
                ('parent_topic', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_topics', to='core.topic')),
                ('questions', models.ManyToManyField(related_name='topics_of_questions', through='core.DirectIndicator', to='core.Question')),
            ],
            options={
                'verbose_name': 'topic',
                'verbose_name_plural': 'topics',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('rate', models.IntegerField(default=0)),
                ('anonymous', models.BooleanField()),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='core.method')),
                ('questions', models.ManyToManyField(related_name='surveys', to='core.DirectIndicator')),
                ('stakeholder_groups', models.ManyToManyField(to='core.StakeholderGroup')),
            ],
            options={
                'verbose_name': 'survey',
                'verbose_name_plural': 'surveys',
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=140)),
                ('value', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_options', to='core.question')),
                ('question_responses', models.ManyToManyField(blank=True, related_name='values', to='core.QuestionResponse')),
            ],
            options={
                'db_table': 'f{AppConfig.name}_question_option',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='options',
            field=models.ManyToManyField(blank=True, related_name='ooo', to='core.QuestionOption'),
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions_of_topic', to='core.topic'),
        ),
        migrations.AddField(
            model_name='question',
            name='topics',
            field=models.ManyToManyField(through='core.DirectIndicator', to='core.Topic'),
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ispublic', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('methods', models.ManyToManyField(blank=True, related_name='networks', to='core.Method')),
                ('organisations', models.ManyToManyField(blank=True, related_name='networks', to='core.Organisation')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
            },
        ),
        migrations.AddField(
            model_name='method',
            name='organisations',
            field=models.ManyToManyField(blank=True, related_name='methods', to='core.Organisation'),
        ),
        migrations.AddField(
            model_name='directindicator',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='direct_indicators', to='core.question'),
        ),
        migrations.AddField(
            model_name='directindicator',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='direct_indicators', to='core.topic'),
        ),
        migrations.CreateModel(
            name='UserOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('RU', 'RegularUser'), ('OA', 'OrganisationAdmin'), ('NA', 'NetworkAdmin')], default='RU', max_length=255)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_members', to='core.organisation')),
                ('stakeholdergroups', models.ManyToManyField(blank=True, to='core.StakeholderGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_organisations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'organisation')},
            },
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('respondent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='response', serialize=False, to='core.respondent')),
                ('token', models.CharField(default='', max_length=8)),
                ('finished', models.BooleanField(default=False)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='core.survey')),
            ],
            options={
                'verbose_name': 'survey_response',
                'verbose_name_plural': 'survey_responses',
            },
        ),
        migrations.AddField(
            model_name='questionresponse',
            name='survey_response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_responses', to='core.surveyresponse'),
        ),
    ]
